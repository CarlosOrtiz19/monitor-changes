[{"C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\index.js":"1","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\reportWebVitals.js":"2","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\App.js":"3","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\NavBarDrawer.js":"4","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\TimeSelector.js":"5","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\UrlInput.js":"6","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\ShowWebPage.js":"7","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\TakeScreenShotPuppeter.js":"8","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\CropImage.js":"9","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\CropImageV2.js":"10","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\Service\\JsoupService.js":"11","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\Utils\\ProgressIndicator.js":"12","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\Cards.js":"13","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\Router.js":"14","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\Home.js":"15","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\MonitorByEmail.js":"16","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\CardTemplate.js":"17","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\Utils\\ShowImage.js":"18"},{"size":526,"mtime":1620664869376,"results":"19","hashOfConfig":"20"},{"size":415,"mtime":1620664869377,"results":"21","hashOfConfig":"20"},{"size":404,"mtime":1620664869363,"results":"22","hashOfConfig":"20"},{"size":5946,"mtime":1620664869369,"results":"23","hashOfConfig":"20"},{"size":3021,"mtime":1618199063932,"results":"24","hashOfConfig":"20"},{"size":816,"mtime":1614055131757,"results":"25","hashOfConfig":"20"},{"size":4001,"mtime":1620676863595,"results":"26","hashOfConfig":"20"},{"size":259,"mtime":1614055271632,"results":"27","hashOfConfig":"20"},{"size":4554,"mtime":1620664869366,"results":"28","hashOfConfig":"20"},{"size":5236,"mtime":1620684649846,"results":"29","hashOfConfig":"20"},{"size":1596,"mtime":1620664869364,"results":"30","hashOfConfig":"20"},{"size":197,"mtime":1614954511597,"results":"31","hashOfConfig":"20"},{"size":2467,"mtime":1620664869366,"results":"32","hashOfConfig":"20"},{"size":691,"mtime":1620664869371,"results":"33","hashOfConfig":"20"},{"size":145,"mtime":1620664869367,"results":"34","hashOfConfig":"20"},{"size":2224,"mtime":1620664869368,"results":"35","hashOfConfig":"20"},{"size":4578,"mtime":1620676886064,"results":"36","hashOfConfig":"20"},{"size":1068,"mtime":1620674612737,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"5haxmg",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"40"},"C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\index.js",[],["85","86"],"C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\reportWebVitals.js",[],"C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\App.js",[],"C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\NavBarDrawer.js",[],"C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\TimeSelector.js",["87","88","89","90","91","92","93","94","95"],"import React, { useState, useCallback, useRef, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst minute = [10,20,30,40,50];\r\nconst hours = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23];\r\n\r\n\r\nexport default function TimeSelector() {\r\n    const classes = useStyles();\r\n    const [minutes] = useState(minute)\r\n    const [timeTest, settimeTest] = useState(0)\r\n    const [hours, sethour] = useState(0)\r\n    const [day, setday] = useState(0)\r\n\r\n    const handleChange = (event) => {\r\n        settimeTest(event.target.value);\r\n        console.log(timeTest)\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">minutes</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={timeTest}\r\n                    onChange={handleChange}\r\n                >\r\n                    {minutes.map(min => \r\n                        <MenuItem key={min.toString()}> {min}</MenuItem>\r\n                    )\r\n\r\n                    }\r\n                    \r\n                </Select>\r\n            </FormControl>\r\n\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Hours</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={timeTest}\r\n                    placeholder= \"0\"\r\n                    onChange={handleChange}\r\n                >\r\n                    {minutes.map(min => \r\n                        <MenuItem key={min.toString()}> {min}</MenuItem>\r\n                    )\r\n\r\n                    }\r\n                    \r\n                </Select>\r\n            </FormControl>\r\n\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Days</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={timeTest}\r\n                    onChange={handleChange}\r\n                >\r\n                    {minutes.map(min => \r\n                        <MenuItem key={min.toString()}> {min}</MenuItem>\r\n                    )\r\n\r\n                    }\r\n                    \r\n                </Select>\r\n            </FormControl>\r\n\r\n        </div>\r\n    )\r\n}\r\n",["96","97"],"C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\UrlInput.js",["98","99"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ShowWebPage from './ShowWebPage';\r\nimport CropImage from './CropImage';\r\nimport TakeScreenShotPuppeter from './TakeScreenShotPuppeter';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function UrlInput() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <TextField id=\"filled-basic\" label=\"Url\" variant=\"outlined\"  />\r\n            <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\r\n\r\n\r\n<div>\r\n  <TakeScreenShotPuppeter/> \r\n</div>\r\n<div>\r\n  <CropImage/>    \r\n</div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\ShowWebPage.js",["100","101","102","103","104"],"C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\TakeScreenShotPuppeter.js",[],"C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\CropImage.js",["105","106","107","108","109","110","111","112"],"import {Button} from '@material-ui/core';\r\nimport React, {useState, useCallback} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport ReactCrop, {makeAspectCrop} from 'react-image-crop'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\nimport ImageCard from './Cards'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nclass CropImage extends React.Component {\r\n\r\n    state = {\r\n        src: null,\r\n        images: [],\r\n        crop: {\r\n            x: 10,\r\n            y: 10,\r\n            width: 100,\r\n            height: 100\r\n        }\r\n    };\r\n\r\n    onSelectFile = (e) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const reader = new FileReader();\r\n            reader.addEventListener(\r\n                \"load\",\r\n                () =>\r\n                    this.setState({\r\n                        src: reader.result\r\n                    }),\r\n                false\r\n            );\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    onImageLoaded = (image) => {\r\n        this.imageRef = image;\r\n        console.log(\"onCropComplete\", image);\r\n    };\r\n\r\n    onCropComplete = (crop) => {\r\n        this.makeClientCrop(crop);\r\n        console.log(\"onCropComplete\", crop);\r\n    };\r\n\r\n    showSelections = () => {\r\n        for (let index = 0; index < this.state.images.length; index++) {\r\n            return\r\n        }\r\n    }\r\n\r\n    confirmImage = () => {\r\n        this.state.images.push(this.state.crop);\r\n        console.log(this.state.images.length);\r\n        console.log(this.state.images[this.state.images.length - 1])\r\n        if (this.state.images.length > 1) {\r\n            if (this.state.images[0] === this.state.images[1]) {\r\n                console.log(\"identicals\")\r\n            } else {\r\n                console.log(\"non identicals\")\r\n            }\r\n        }\r\n        return <ImageCard src={this.state.images[0]}/>\r\n    }\r\n\r\n    onCropChange = (crop) => {\r\n        this.setState({crop});\r\n    };\r\n\r\n    async makeClientCrop(crop) {\r\n        if (this.imageRef && crop.width && crop.height) {\r\n            const croppedImageUrl = await this.getCroppedImg(\r\n                this.imageRef,\r\n                crop,\r\n                'newFile.jpeg'\r\n            );\r\n            this.setState({croppedImageUrl});\r\n        }\r\n    }\r\n\r\n    //show image in canvas\r\n    getCroppedImg(image, crop, fileName) {\r\n        const canvas = document.createElement('canvas');\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height\r\n        );\r\n\r\n        return new Promise((resolve, reject) => {\r\n            canvas.toBlob(blob => {\r\n                if (!blob) {\r\n                    //reject(new Error('Canvas is empty'));\r\n                    console.error('Canvas is empty');\r\n                    return;\r\n                }\r\n                blob.name = fileName;\r\n                window.URL.revokeObjectURL(this.fileUrl);\r\n                this.fileUrl = window.URL.createObjectURL(blob);\r\n                resolve(this.fileUrl);\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {crop, croppedImageUrl, src} = this.state;\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                {this.props.src && (\r\n                    <ReactCrop\r\n                        src={this.props.src}\r\n                        crop={this.state.crop}\r\n                        ruleOfThirds\r\n                        onImageLoaded={this.onImageLoaded}\r\n                        onComplete={this.onCropComplete}\r\n                        onChange={this.onCropChange}\r\n                        minWidth={500}\r\n                        minHeight={120}\r\n                    />\r\n                )}\r\n\r\n                {croppedImageUrl && (\r\n                    <img alt=\"Crop\" style={{maxWidth: '100%'}} src={croppedImageUrl}/>\r\n                )}\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" disableElevation onClick={this.confirmImage}>\r\n                    confirm\r\n                </Button>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CropImage;\r\n\r\n","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\CropImageV2.js",["113","114","115"],"import React, { useState, useCallback, useRef, useEffect } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { TextField, Button, Typography, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport JsoupService from '../Service/JsoupService';\r\n\r\n\r\nfunction generateDownload(canvas, crop) {\r\n    if (!crop || !canvas) {\r\n        return;\r\n    }\r\n\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n            const anchor = document.createElement('a');\r\n            anchor.download = 'cropPreview.png';\r\n            anchor.href = URL.createObjectURL(blob);\r\n            anchor.click();\r\n\r\n            window.URL.revokeObjectURL(previewUrl);\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        marginLeft: theme.spacing(5),\r\n        marginRight: theme.spacing(5),\r\n        padding: theme.spacing(5),\r\n        margin: 'auto',\r\n        variant: 'outlined'\r\n        //talla papel\r\n\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '100ch',\r\n    },\r\n}));\r\n\r\n\r\nexport default function CropImageV2(props) {\r\n    const classes = useStyles();\r\n    const [upImg] = props.src;\r\n    const imgRef = useRef(null);\r\n    const previewCanvasRef = useRef(null);\r\n    const [crop, setCrop] = useState({ unit: '%', width: 30, aspect: 16 / 9 });\r\n    const [completedCrop, setCompletedCrop] = useState(null);\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n\r\n    /*const onSelectFile = (e) => {\r\n      if (e.target.files && e.target.files.length > 0) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => setUpImg(reader.result));\r\n        reader.readAsDataURL(e.target.files[0]);\r\n      }\r\n    };*/\r\n\r\n    const onLoad = useCallback((img) => {\r\n        imgRef.current = img;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\r\n            return;\r\n        }\r\n\r\n        const image = imgRef.current;\r\n        const canvas = previewCanvasRef.current;\r\n        const crop = completedCrop;\r\n\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        const ctx = canvas.getContext('2d');\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        canvas.width = crop.width * pixelRatio;\r\n        canvas.height = crop.height * pixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        ctx.imageSmoothingQuality = 'high';\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height\r\n        );\r\n    }, [completedCrop]);\r\n\r\n    const saveInformation = async () => {\r\n\r\n        await JsoupService.saveInfoCrop(crop, props.url, \"carlos@test\")\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"App\">\r\n\r\n            <ReactCrop\r\n                src={props.src}\r\n                onImageLoaded={onLoad}\r\n                crop={crop}\r\n                onChange={(c) => setCrop(c)}\r\n                onComplete={(c) => setCompletedCrop(c)}\r\n            />\r\n\r\n            <div>\r\n                <canvas\r\n                    ref={previewCanvasRef}\r\n                    // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\r\n                    style={{\r\n                        //width: 300,\r\n                        height: 300\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Button\r\n                type=\"button\"\r\n                disabled={!completedCrop?.width || !completedCrop?.height}\r\n                onClick={() =>\r\n                    saveInformation()\r\n                }\r\n            >\r\n                save crop\r\n            </Button>\r\n\r\n            <Button\r\n                type=\"button\"\r\n                disabled={!completedCrop?.width || !completedCrop?.height}\r\n                onClick={() =>\r\n                    generateDownload(previewCanvasRef.current, completedCrop)\r\n                }\r\n            >\r\n                Download cropped image\r\n            </Button>\r\n\r\n            <Grid item xs={12}>\r\n                <Typography>\r\n                    1. Insérez l'url que vous souhaitez surveiller\r\n                </Typography>\r\n            </Grid>\r\n\r\n            <TextField id=\"outlined-size-normal\"\r\n                className={classes.textField}\r\n                label=\"Email\"\r\n                placeholder=\"insert the email to notify\"\r\n                variant=\"outlined\"\r\n                onChange={e => setEmail(e.target.value)} />\r\n\r\n            <TextField id=\"outlined-size-normal\"\r\n                className={classes.textField}\r\n                label=\"Email\"\r\n                placeholder=\"insert the email to notify\"\r\n                variant=\"outlined\"\r\n                onChange={e => setEmail(e.target.value)} />\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\Service\\JsoupService.js",["116"],"import axios from 'axios';\r\n\r\n\r\nconst BASE_URL = \"http://localhost:8080/watch\";\r\nconst URL_NODE_SERVER = \"http://localhost:4000\";\r\n\r\nclass ImageService {\r\n\r\n    async setState(url, session, cookie, start) {\r\n        return axios.put(BASE_URL + \"/screenshot/run?url=\" + url + \"&session=\" + session + \"&cookie=\" + cookie + \"&start=\" + start);\r\n    }\r\n\r\n    async getScreenShot(url) {\r\n        return axios.get(URL_NODE_SERVER + \"/screenshot/?url=\" + url, {\r\n            responseType: 'arraybuffer'\r\n        }).then(response => {\r\n            const buffer = Buffer.from(response.data, 'base64');\r\n        }).catch(ex => {\r\n            console.error(ex);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    async getAllMonitorsByEmail(email) {\r\n        let config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        return axios.get(BASE_URL + \"/search/\" + email, config)\r\n\r\n    }\r\n\r\n    async saveInfoCrop(_crop, _url, _email) {\r\n        let crop = {\r\n            x: Number.parseFloat(_crop.x),\r\n            y: Number.parseFloat(_crop.y),\r\n            width: Number.parseFloat(_crop.width),\r\n            height: Number.parseFloat(_crop.height),\r\n            url: _url,\r\n            email: _email\r\n        }\r\n\r\n        let config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        return axios.post(BASE_URL + \"/saveCropInfo/\", crop, config)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err.response))\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new ImageService()","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\Utils\\ProgressIndicator.js",[],"C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\Cards.js",["117","118","119","120","121","122","123","124"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {red} from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nexport default function ImageCard(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    console.log(props)\r\n\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                        R\r\n                    </Avatar>\r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                }\r\n                title=\"image\"\r\n                subheader=\"date image\"\r\n            />\r\n            <CardMedia\r\n                className={classes.media}\r\n\r\n                image={props.src}\r\n                title=\"image\"\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    image to monitoring\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\Router.js",[],"C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\Home.js",[],"C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\MonitorByEmail.js",["125","126","127","128"],"import React, {useEffect, useState} from \"react\";\r\nimport {TextField, makeStyles, Paper, Button, Typography, Grid} from '@material-ui/core';\r\nimport CardTemplate from './CardTemplate'\r\nimport JsoupService from \"../Service/JsoupService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    paper: {\r\n        marginTop: '0px',\r\n        width: \"75%\",\r\n        //marginLeft: theme.spacing(10),\r\n        //marginRight: theme.spacing(5),\r\n        padding: theme.spacing(2),\r\n        margin: 'auto',\r\n        variant: 'outlined'\r\n        //talla papel\r\n    },\r\n    textField: {\r\n        padding: theme.spacing(5),\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '100ch',\r\n    },\r\n}));\r\n\r\nexport default function MonitorByEmail() {\r\n    const classes = useStyles();\r\n    const [email, setemail] = useState(\"\")\r\n    const [monitors, setmonitors] = useState([])\r\n\r\n\r\n    const findMonitorsBYemail = async () => {\r\n        const response = await JsoupService.getAllMonitorsByEmail(\"carlos@test\");\r\n\r\n        setmonitors(response.data)\r\n\r\n        //setmonitors(response.data);\r\n\r\n        console.log(response)\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        findMonitorsBYemail()\r\n        return () => {\r\n            setmonitors([])\r\n        }\r\n    }, [])\r\n    return (\r\n        <Grid justify=\"center\">\r\n            <Paper className={classes.paper}>\r\n                <TextField id=\"outlined-size-normal\"\r\n                           className={classes.textField}\r\n                           label=\"Email\"\r\n                           placeholder=\"insert the email to notify\"\r\n                           variant=\"outlined\"\r\n                    // onChange={e => setEmail(e.target.value)}\r\n                />\r\n\r\n                <Grid container>\r\n\r\n                    {monitors.length && monitors.map(data =>\r\n                        <Grid item>\r\n                            <CardTemplate monitor={data}/>\r\n                        </Grid>\r\n                    )}\r\n\r\n                </Grid>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\components\\CardTemplate.js",["129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { IconButton, Divider, CardActionArea, Button, Paper, Link, Box } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue, red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ShowImage from \"../Utils/ShowImage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 275,\r\n        margin: theme.spacing(2),\r\n        backgroundColor: '#FAF9F8',\r\n    },\r\n    media: {\r\n        //padding: theme.spacing(2),\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    paper: {\r\n        // margin: theme.spacing(1),\r\n\r\n    },\r\n    title: {\r\n        fontSize: 10,\r\n        alignSelf: \"end\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n\r\n    link: {\r\n        fontSize: 15,\r\n    },\r\n}));\r\nexport default function ImageCard(props) {\r\n    const classes = useStyles();\r\n    const [image, setimage] = useState(null)\r\n    const [showImage, setshowImage] = useState(false)\r\n\r\n\r\n    const bufferToSrc = () => {\r\n\r\n    }\r\n\r\n    const showImageFuction = (e) => {\r\n        console.log(showImage)\r\n        setshowImage(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        console.log(showImage)\r\n        setshowImage(false)\r\n    };\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n\r\n            <CardActionArea>\r\n                <Paper className={classes.paper}>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={`data:image/jpeg;base64,${props.monitor.imageCrop.data}`}\r\n                        onClick={showImageFuction}\r\n                    />\r\n                </Paper >\r\n            </CardActionArea>\r\n\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"left\">\r\n                    Titre: {props.monitor.imageCrop.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"left\">\r\n                    Date creation: {props.monitor.imageCrop.createDate}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n\r\n            <CardActions>\r\n\r\n\r\n                {showImage &&\r\n                    <ShowImage src={`data:image/jpeg;base64,${props.monitor.imageCrop.data}`} handleClose={handleClose} />\r\n                }\r\n\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n\r\n                    <Box p={1} bgcolor=\"grey.300\">\r\n                        <Link\r\n                            className={classes.link}\r\n                            component=\"button\"\r\n                            variant=\"body2\"\r\n                            onClick={() => {\r\n                                console.info(\"I'm a button.\");\r\n                            }}\r\n                        >\r\n                            Plus de détails\r\n                     </Link>\r\n                    </Box>\r\n\r\n\r\n                </Box>\r\n\r\n\r\n            </CardActions>\r\n        </Card>\r\n\r\n        // <Card className={classes.root}>\r\n        //     <CardHeader\r\n        //         avatar={\r\n        //             <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n        //                 R\r\n        //             </Avatar>\r\n        //         }\r\n        //         action={\r\n        //             <IconButton aria-label=\"settings\">\r\n        //                 <MoreVertIcon/>\r\n        //             </IconButton>\r\n        //         }\r\n        //         title={props.monitor.imageCrop.name}\r\n        //         subheader={props.monitor.createDate}\r\n\r\n        //     />\r\n        //     <Divider/>\r\n        //     <CardMedia\r\n        //         className={classes.media}\r\n        //         image={`data:image/jpeg;base64,${props.monitor.imageCrop.data}`}\r\n        //         title=\"image\"\r\n        //     />\r\n        //     <Divider/>\r\n\r\n\r\n        //     <CardContent>\r\n        //         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n        //             image to monitoring\r\n        //         </Typography>\r\n        //     </CardContent>\r\n        // </Card>\r\n    );\r\n}","C:\\Users\\18229\\IdeaProjects\\page-watcher\\front-end\\src\\Utils\\ShowImage.js",["146","147","148","149","150","151"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function ShowImage(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n\r\n  const handleClose = () => {\r\n    props.handleClose();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <Dialog\r\n      fullWidth={fullWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        maxWidth={maxWidth}\r\n      >\r\n        {props.src && (\r\n          <img src={props.src} alt={props.title} />\r\n        )}\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Fermer\r\n          </Button>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n",{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":38},{"ruleId":"156","severity":1,"message":"160","line":1,"column":40,"nodeType":"158","messageId":"159","endLine":1,"endColumn":46},{"ruleId":"156","severity":1,"message":"161","line":1,"column":48,"nodeType":"158","messageId":"159","endLine":1,"endColumn":57},{"ruleId":"156","severity":1,"message":"162","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":22},{"ruleId":"156","severity":1,"message":"163","line":20,"column":7,"nodeType":"158","messageId":"159","endLine":20,"endColumn":12},{"ruleId":"156","severity":1,"message":"163","line":27,"column":12,"nodeType":"158","messageId":"159","endLine":27,"endColumn":17},{"ruleId":"156","severity":1,"message":"164","line":27,"column":19,"nodeType":"158","messageId":"159","endLine":27,"endColumn":26},{"ruleId":"156","severity":1,"message":"165","line":28,"column":12,"nodeType":"158","messageId":"159","endLine":28,"endColumn":15},{"ruleId":"156","severity":1,"message":"166","line":28,"column":17,"nodeType":"158","messageId":"159","endLine":28,"endColumn":23},{"ruleId":"152","replacedBy":"167"},{"ruleId":"154","replacedBy":"168"},{"ruleId":"156","severity":1,"message":"169","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":19},{"ruleId":"156","severity":1,"message":"170","line":18,"column":11,"nodeType":"158","messageId":"159","endLine":18,"endColumn":18},{"ruleId":"156","severity":1,"message":"171","line":1,"column":8,"nodeType":"158","messageId":"159","endLine":1,"endColumn":20},{"ruleId":"156","severity":1,"message":"161","line":2,"column":16,"nodeType":"158","messageId":"159","endLine":2,"endColumn":25},{"ruleId":"156","severity":1,"message":"172","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":25},{"ruleId":"156","severity":1,"message":"173","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":17},{"ruleId":"156","severity":1,"message":"174","line":38,"column":22,"nodeType":"158","messageId":"159","endLine":38,"endColumn":33},{"ruleId":"156","severity":1,"message":"175","line":2,"column":16,"nodeType":"158","messageId":"159","endLine":2,"endColumn":24},{"ruleId":"156","severity":1,"message":"157","line":2,"column":26,"nodeType":"158","messageId":"159","endLine":2,"endColumn":37},{"ruleId":"156","severity":1,"message":"176","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":16},{"ruleId":"156","severity":1,"message":"177","line":4,"column":20,"nodeType":"158","messageId":"159","endLine":4,"endColumn":34},{"ruleId":"156","severity":1,"message":"178","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":12},{"ruleId":"156","severity":1,"message":"179","line":8,"column":8,"nodeType":"158","messageId":"159","endLine":8,"endColumn":13},{"ruleId":"156","severity":1,"message":"180","line":121,"column":16,"nodeType":"158","messageId":"159","endLine":121,"endColumn":20},{"ruleId":"156","severity":1,"message":"181","line":121,"column":39,"nodeType":"158","messageId":"159","endLine":121,"endColumn":42},{"ruleId":"156","severity":1,"message":"182","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":13},{"ruleId":"156","severity":1,"message":"183","line":53,"column":12,"nodeType":"158","messageId":"159","endLine":53,"endColumn":17},{"ruleId":"156","severity":1,"message":"184","line":59,"column":12,"nodeType":"158","messageId":"159","endLine":59,"endColumn":17},{"ruleId":"156","severity":1,"message":"185","line":17,"column":19,"nodeType":"158","messageId":"159","endLine":17,"endColumn":25},{"ruleId":"156","severity":1,"message":"186","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":12},{"ruleId":"156","severity":1,"message":"187","line":8,"column":8,"nodeType":"158","messageId":"159","endLine":8,"endColumn":19},{"ruleId":"156","severity":1,"message":"188","line":9,"column":8,"nodeType":"158","messageId":"159","endLine":9,"endColumn":16},{"ruleId":"156","severity":1,"message":"189","line":14,"column":8,"nodeType":"158","messageId":"159","endLine":14,"endColumn":20},{"ruleId":"156","severity":1,"message":"190","line":15,"column":8,"nodeType":"158","messageId":"159","endLine":15,"endColumn":17},{"ruleId":"156","severity":1,"message":"191","line":16,"column":8,"nodeType":"158","messageId":"159","endLine":16,"endColumn":22},{"ruleId":"156","severity":1,"message":"192","line":44,"column":12,"nodeType":"158","messageId":"159","endLine":44,"endColumn":20},{"ruleId":"156","severity":1,"message":"193","line":44,"column":22,"nodeType":"158","messageId":"159","endLine":44,"endColumn":33},{"ruleId":"156","severity":1,"message":"194","line":2,"column":39,"nodeType":"158","messageId":"159","endLine":2,"endColumn":45},{"ruleId":"156","severity":1,"message":"195","line":2,"column":47,"nodeType":"158","messageId":"159","endLine":2,"endColumn":57},{"ruleId":"156","severity":1,"message":"184","line":28,"column":12,"nodeType":"158","messageId":"159","endLine":28,"endColumn":17},{"ruleId":"156","severity":1,"message":"196","line":28,"column":19,"nodeType":"158","messageId":"159","endLine":28,"endColumn":27},{"ruleId":"156","severity":1,"message":"161","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"186","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":12},{"ruleId":"156","severity":1,"message":"197","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":18},{"ruleId":"156","severity":1,"message":"188","line":9,"column":8,"nodeType":"158","messageId":"159","endLine":9,"endColumn":16},{"ruleId":"156","severity":1,"message":"198","line":10,"column":8,"nodeType":"158","messageId":"159","endLine":10,"endColumn":14},{"ruleId":"156","severity":1,"message":"199","line":11,"column":10,"nodeType":"158","messageId":"159","endLine":11,"endColumn":20},{"ruleId":"156","severity":1,"message":"200","line":11,"column":22,"nodeType":"158","messageId":"159","endLine":11,"endColumn":29},{"ruleId":"156","severity":1,"message":"194","line":11,"column":47,"nodeType":"158","messageId":"159","endLine":11,"endColumn":53},{"ruleId":"156","severity":1,"message":"201","line":13,"column":10,"nodeType":"158","messageId":"159","endLine":13,"endColumn":14},{"ruleId":"156","severity":1,"message":"202","line":13,"column":16,"nodeType":"158","messageId":"159","endLine":13,"endColumn":19},{"ruleId":"156","severity":1,"message":"189","line":14,"column":8,"nodeType":"158","messageId":"159","endLine":14,"endColumn":20},{"ruleId":"156","severity":1,"message":"190","line":15,"column":8,"nodeType":"158","messageId":"159","endLine":15,"endColumn":17},{"ruleId":"156","severity":1,"message":"191","line":16,"column":8,"nodeType":"158","messageId":"159","endLine":16,"endColumn":22},{"ruleId":"156","severity":1,"message":"203","line":17,"column":8,"nodeType":"158","messageId":"159","endLine":17,"endColumn":20},{"ruleId":"156","severity":1,"message":"204","line":48,"column":12,"nodeType":"158","messageId":"159","endLine":48,"endColumn":17},{"ruleId":"156","severity":1,"message":"205","line":48,"column":19,"nodeType":"158","messageId":"159","endLine":48,"endColumn":27},{"ruleId":"156","severity":1,"message":"206","line":52,"column":11,"nodeType":"158","messageId":"159","endLine":52,"endColumn":22},{"ruleId":"156","severity":1,"message":"207","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":21},{"ruleId":"156","severity":1,"message":"208","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":21},{"ruleId":"156","severity":1,"message":"209","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":25},{"ruleId":"156","severity":1,"message":"210","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":19},{"ruleId":"156","severity":1,"message":"211","line":11,"column":20,"nodeType":"158","messageId":"159","endLine":11,"endColumn":31},{"ruleId":"156","severity":1,"message":"212","line":12,"column":21,"nodeType":"158","messageId":"159","endLine":12,"endColumn":33},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","'FormHelperText' is defined but never used.","'hours' is assigned a value but never used.","'sethour' is assigned a value but never used.","'day' is assigned a value but never used.","'setday' is assigned a value but never used.",["213"],["214"],"'ShowWebPage' is defined but never used.","'classes' is assigned a value but never used.","'JsoupService' is defined but never used.","'ProgressIndicator' is defined but never used.","'CropImage' is defined but never used.","'setProgress' is assigned a value but never used.","'useState' is defined but never used.","'ReactDOM' is defined but never used.","'makeAspectCrop' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'crop' is assigned a value but never used.","'src' is assigned a value but never used.","'axios' is defined but never used.","'upImg' is assigned a value but never used.","'email' is assigned a value but never used.","'buffer' is assigned a value but never used.","'clsx' is defined but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'setemail' is assigned a value but never used.","'CardHeader' is defined but never used.","'Avatar' is defined but never used.","'IconButton' is defined but never used.","'Divider' is defined but never used.","'blue' is defined but never used.","'red' is defined but never used.","'MoreVertIcon' is defined but never used.","'image' is assigned a value but never used.","'setimage' is assigned a value but never used.","'bufferToSrc' is assigned a value but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'setMaxWidth' is assigned a value but never used.","'setFullWidth' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]