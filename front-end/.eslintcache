[{"D:\\Desktop\\page-watcher\\front-end\\src\\index.js":"1","D:\\Desktop\\page-watcher\\front-end\\src\\App.js":"2","D:\\Desktop\\page-watcher\\front-end\\src\\reportWebVitals.js":"3","D:\\Desktop\\page-watcher\\front-end\\src\\components\\UrlInput.js":"4","D:\\Desktop\\page-watcher\\front-end\\src\\components\\NavBarDrawer.js":"5","D:\\Desktop\\page-watcher\\front-end\\src\\components\\ShowWebPage.js":"6","D:\\Desktop\\page-watcher\\front-end\\src\\components\\CropImage.js":"7","D:\\Desktop\\page-watcher\\front-end\\src\\components\\TakeScreenShotPuppeter.js":"8","D:\\Desktop\\page-watcher\\front-end\\src\\Utils\\ProgressIndicator.js":"9","D:\\Desktop\\page-watcher\\front-end\\src\\Service\\JsoupService.js":"10","D:\\Desktop\\page-watcher\\front-end\\src\\components\\Cards.js":"11","D:\\Desktop\\page-watcher\\front-end\\src\\components\\CropImageV2.js":"12","D:\\Desktop\\page-watcher\\front-end\\src\\components\\TimeSelector.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":407,"mtime":1618198189433,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":816,"mtime":1614055131757,"results":"18","hashOfConfig":"15"},{"size":4863,"mtime":1617691547186,"results":"19","hashOfConfig":"15"},{"size":3935,"mtime":1618195379463,"results":"20","hashOfConfig":"15"},{"size":3859,"mtime":1617855962461,"results":"21","hashOfConfig":"15"},{"size":259,"mtime":1614055271632,"results":"22","hashOfConfig":"15"},{"size":197,"mtime":1614954511597,"results":"23","hashOfConfig":"15"},{"size":662,"mtime":1614833213368,"results":"24","hashOfConfig":"15"},{"size":2195,"mtime":1614963599519,"results":"25","hashOfConfig":"15"},{"size":4246,"mtime":1618198148049,"results":"26","hashOfConfig":"15"},{"size":3021,"mtime":1618199063932,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1y9ukn",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Desktop\\page-watcher\\front-end\\src\\index.js",[],["60","61"],"D:\\Desktop\\page-watcher\\front-end\\src\\App.js",["62","63"],"D:\\Desktop\\page-watcher\\front-end\\src\\reportWebVitals.js",[],"D:\\Desktop\\page-watcher\\front-end\\src\\components\\UrlInput.js",["64","65"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ShowWebPage from './ShowWebPage';\r\nimport CropImage from './CropImage';\r\nimport TakeScreenShotPuppeter from './TakeScreenShotPuppeter';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function UrlInput() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <TextField id=\"filled-basic\" label=\"Url\" variant=\"outlined\"  />\r\n            <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\r\n\r\n\r\n<div>\r\n  <TakeScreenShotPuppeter/> \r\n</div>\r\n<div>\r\n  <CropImage/>    \r\n</div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","D:\\Desktop\\page-watcher\\front-end\\src\\components\\NavBarDrawer.js",["66"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Changes\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Create', 'See my pages', 'setting'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Desktop\\page-watcher\\front-end\\src\\components\\ShowWebPage.js",["67","68","69","70","71"],"D:\\Desktop\\page-watcher\\front-end\\src\\components\\CropImage.js",["72","73","74","75","76","77","78","79"],"import { Button } from '@material-ui/core';\r\nimport React, { useState, useCallback } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport ReactCrop, { makeAspectCrop } from 'react-image-crop'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\nimport ImageCard from './Cards'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nclass CropImage extends React.Component {\r\n\r\n  state = {\r\n    src: null,\r\n    images: [],\r\n    crop: {\r\n      x: 10,\r\n      y: 10,\r\n      width: 100,\r\n      height: 100\r\n    }\r\n  };\r\n\r\n  onSelectFile = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\r\n        \"load\",\r\n        () =>\r\n          this.setState({\r\n            src: reader.result\r\n          }),\r\n        false\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n    console.log(\"onCropComplete\", image);\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    this.makeClientCrop(crop);\r\n    console.log(\"onCropComplete\", crop);\r\n  };\r\n\r\n  showSelections = () => {\r\n    for (let index = 0; index < this.state.images.length; index++) {\r\n      return\r\n    }\r\n  }\r\n\r\n  confirmImage = () => {\r\n    this.state.images.push(this.state.crop);\r\n    console.log(this.state.images.length);\r\n    console.log(this.state.images[this.state.images.length - 1])\r\n    if (this.state.images.length > 1) {\r\n      if (this.state.images[0] === this.state.images[1]) {\r\n        console.log(\"identicals\")\r\n      }\r\n      else {\r\n        console.log(\"non identicals\")\r\n      }\r\n    }\r\n    return <ImageCard src={this.state.images[0]} />\r\n  }\r\n\r\n  onCropChange = (crop) => {\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n    }\r\n  }\r\n\r\n  //show image in canvas\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob(blob => {\r\n        if (!blob) {\r\n          //reject(new Error('Canvas is empty'));\r\n          console.error('Canvas is empty');\r\n          return;\r\n        }\r\n        blob.name = fileName;\r\n        window.URL.revokeObjectURL(this.fileUrl);\r\n        this.fileUrl = window.URL.createObjectURL(blob);\r\n        resolve(this.fileUrl);\r\n      }, 'image/jpeg');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { crop, croppedImageUrl, src } = this.state;\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.props.src && (\r\n          <ReactCrop\r\n            src={this.props.src}\r\n            crop={this.state.crop}\r\n            ruleOfThirds\r\n            onImageLoaded={this.onImageLoaded}\r\n            onComplete={this.onCropComplete}\r\n            onChange={this.onCropChange}\r\n            minWidth={500}\r\n            minHeight={120}\r\n          />\r\n        )}\r\n\r\n        {croppedImageUrl && (\r\n          <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={croppedImageUrl} />\r\n        )}\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disableElevation onClick={this.confirmImage}>confirm</Button>\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CropImage;\r\n\r\n","D:\\Desktop\\page-watcher\\front-end\\src\\components\\TakeScreenShotPuppeter.js",[],"D:\\Desktop\\page-watcher\\front-end\\src\\Utils\\ProgressIndicator.js",[],"D:\\Desktop\\page-watcher\\front-end\\src\\Service\\JsoupService.js",["80"],"import axios from 'axios';\r\n\r\n\r\nconst BASE_URL = \"http://localhost:8080/watch\";\r\n\r\nclass ImageService{\r\n\r\n    async setState(url,session,cookie,start){\r\n        return axios.put(BASE_URL + \"/run?url=\"+ url + \"&session=\"+ session +  \"&cookie=\" + cookie +\"&start=\" +start);\r\n    }\r\n    async getScreenShot(url){\r\n        return axios.get(\"http://localhost:4000/screenshot?url=\"+url, {\r\n            responseType: 'arraybuffer'\r\n          }).then(response => {\r\n              const buffer = Buffer.from(response.data, 'base64');\r\n          }).catch(ex => {\r\n            console.error(ex);\r\n          });\r\n    \r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default new ImageService()","D:\\Desktop\\page-watcher\\front-end\\src\\components\\Cards.js",["81","82","83","84","85","86","87","88"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function ImageCard(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  console.log(props)\r\n\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            R\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"image\"\r\n        subheader= \"date image\"\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n\r\n        image={props.src}\r\n        title=\"image\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          image to monitoring\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","D:\\Desktop\\page-watcher\\front-end\\src\\components\\CropImageV2.js",["89","90"],"D:\\Desktop\\page-watcher\\front-end\\src\\components\\TimeSelector.js",["91","92","93","94","95","96","97","98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":12},{"ruleId":"104","severity":1,"message":"108","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":16},{"ruleId":"104","severity":1,"message":"109","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":19},{"ruleId":"104","severity":1,"message":"110","line":18,"column":11,"nodeType":"106","messageId":"107","endLine":18,"endColumn":18},{"ruleId":"104","severity":1,"message":"111","line":19,"column":8,"nodeType":"106","messageId":"107","endLine":19,"endColumn":18},{"ruleId":"104","severity":1,"message":"112","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":20},{"ruleId":"104","severity":1,"message":"113","line":2,"column":17,"nodeType":"106","messageId":"107","endLine":2,"endColumn":26},{"ruleId":"104","severity":1,"message":"114","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":25},{"ruleId":"104","severity":1,"message":"115","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":17},{"ruleId":"104","severity":1,"message":"116","line":37,"column":22,"nodeType":"106","messageId":"107","endLine":37,"endColumn":33},{"ruleId":"104","severity":1,"message":"117","line":2,"column":17,"nodeType":"106","messageId":"107","endLine":2,"endColumn":25},{"ruleId":"104","severity":1,"message":"118","line":2,"column":27,"nodeType":"106","messageId":"107","endLine":2,"endColumn":38},{"ruleId":"104","severity":1,"message":"119","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":16},{"ruleId":"104","severity":1,"message":"120","line":4,"column":21,"nodeType":"106","messageId":"107","endLine":4,"endColumn":35},{"ruleId":"104","severity":1,"message":"121","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":12},{"ruleId":"104","severity":1,"message":"122","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":13},{"ruleId":"104","severity":1,"message":"123","line":122,"column":13,"nodeType":"106","messageId":"107","endLine":122,"endColumn":17},{"ruleId":"104","severity":1,"message":"124","line":122,"column":36,"nodeType":"106","messageId":"107","endLine":122,"endColumn":39},{"ruleId":"104","severity":1,"message":"125","line":15,"column":21,"nodeType":"106","messageId":"107","endLine":15,"endColumn":27},{"ruleId":"104","severity":1,"message":"126","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":12},{"ruleId":"104","severity":1,"message":"127","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":19},{"ruleId":"104","severity":1,"message":"128","line":9,"column":8,"nodeType":"106","messageId":"107","endLine":9,"endColumn":16},{"ruleId":"104","severity":1,"message":"129","line":14,"column":8,"nodeType":"106","messageId":"107","endLine":14,"endColumn":20},{"ruleId":"104","severity":1,"message":"130","line":15,"column":8,"nodeType":"106","messageId":"107","endLine":15,"endColumn":17},{"ruleId":"104","severity":1,"message":"131","line":16,"column":8,"nodeType":"106","messageId":"107","endLine":16,"endColumn":22},{"ruleId":"104","severity":1,"message":"132","line":44,"column":10,"nodeType":"106","messageId":"107","endLine":44,"endColumn":18},{"ruleId":"104","severity":1,"message":"133","line":44,"column":20,"nodeType":"106","messageId":"107","endLine":44,"endColumn":31},{"ruleId":"104","severity":1,"message":"134","line":51,"column":10,"nodeType":"106","messageId":"107","endLine":51,"endColumn":15},{"ruleId":"104","severity":1,"message":"135","line":57,"column":10,"nodeType":"106","messageId":"107","endLine":57,"endColumn":15},{"ruleId":"104","severity":1,"message":"118","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":38},{"ruleId":"104","severity":1,"message":"136","line":1,"column":40,"nodeType":"106","messageId":"107","endLine":1,"endColumn":46},{"ruleId":"104","severity":1,"message":"113","line":1,"column":48,"nodeType":"106","messageId":"107","endLine":1,"endColumn":57},{"ruleId":"104","severity":1,"message":"137","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":22},{"ruleId":"104","severity":1,"message":"138","line":20,"column":7,"nodeType":"106","messageId":"107","endLine":20,"endColumn":12},{"ruleId":"104","severity":1,"message":"138","line":27,"column":12,"nodeType":"106","messageId":"107","endLine":27,"endColumn":17},{"ruleId":"104","severity":1,"message":"139","line":27,"column":19,"nodeType":"106","messageId":"107","endLine":27,"endColumn":26},{"ruleId":"104","severity":1,"message":"140","line":28,"column":12,"nodeType":"106","messageId":"107","endLine":28,"endColumn":15},{"ruleId":"104","severity":1,"message":"141","line":28,"column":17,"nodeType":"106","messageId":"107","endLine":28,"endColumn":23},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'UrlInput' is defined but never used.","'ShowWebPage' is defined but never used.","'classes' is assigned a value but never used.","'AddBoxIcon' is defined but never used.","'JsoupService' is defined but never used.","'useEffect' is defined but never used.","'ProgressIndicator' is defined but never used.","'CropImage' is defined but never used.","'setProgress' is assigned a value but never used.","'useState' is defined but never used.","'useCallback' is defined but never used.","'ReactDOM' is defined but never used.","'makeAspectCrop' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'crop' is assigned a value but never used.","'src' is assigned a value but never used.","'buffer' is assigned a value but never used.","'clsx' is defined but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'upImg' is assigned a value but never used.","'email' is assigned a value but never used.","'useRef' is defined but never used.","'FormHelperText' is defined but never used.","'hours' is assigned a value but never used.","'sethour' is assigned a value but never used.","'day' is assigned a value but never used.","'setday' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]